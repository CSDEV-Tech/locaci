import type { GetStaticProps, NextPage } from 'next';
import Head from 'next/head';
import { trpc, createSSGHelpers } from '../utils/trpc';
import { Button } from '@locaci/ui';

const Home: NextPage = () => {
    const hello = trpc.useQuery(['example.hello', { text: 'from tRPC' }]);

    return (
        <>
            <Head>
                <title>Create T3 App</title>
                <meta name="description" content="Generated by create-t3-app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main className="container mx-auto flex flex-col items-center justify-center min-h-screen p-4">
                <h1 className="text-5xl md:text-[5rem] leading-normal font-extrabold text-white">
                    Create <span className="text-purple-300">T3</span> App
                </h1>

                <Button variant="primary">Hello there</Button>
                <div className="pt-6 text-2xl text-blue-500 flex justify-center items-center w-full">
                    {hello.data ? (
                        <p>{hello.data.greeting}</p>
                    ) : (
                        <p>Loading..</p>
                    )}
                </div>
            </main>
        </>
    );
};

export default Home;

export const getStaticProps: GetStaticProps = async () => {
    const ssg = await createSSGHelpers();

    await ssg.fetchQuery('example.hello', { text: 'from tRPC' });
    await ssg.fetchQuery('example.getAll');

    return {
        props: {
            trpcState: ssg.dehydrate()
        }
    };
};
